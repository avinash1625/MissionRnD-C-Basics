/*
OVERVIEW: 	Given date of births of two persons as inputs, return 1 if person one is elder,
2 if person two is elder, 0 if both are of same age.
Example: isOlder("24-07-2000", "25-07-2000") should return 1 as person one
is elder than person two.

INPUTS: 	DOBs of two persons as parameters in the format "DD-MM-YYYY".

OUTPUT: 	1 if person one is elder, 2 if person two is elder, 0 if both are of same age.

ERROR CASES: Return -1 if any DOB is invalid.

NOTES: 		Don't use any built-in C functions for comparisions. You are free to write any helper functions.
*/
#include <string.h>
void to_Int(char *, int *, int *,int *);
int getInt(int, int, char *);
int valid_date(int, int, int);
int isOlder(char *dob1, char *dob2) {
	int day1 = 0, month1 = 0, year1 = 0;
	int day2 = 0, year2 = 0, month2 = 0;
	to_Int(dob1, &day1, &month1, &year1);
	to_Int(dob2, &day2, &month2, &year2);
	int x = valid_date(day1, month1, year1);
	int y = valid_date(day2, month2, year2);
	if (x==y)
	{
		if (year1 > year2)
			return 2;
		else if (year1 < year2)
			return 1;
		if (month1>month2)
			return 2;
		else if (month1 < month2)
			return 1;
		if (day1>day2)
			return 2;
		else
			return 1;
		return 0;
	}
	return -1;
}
void to_Int(char *ch, int *day, int *month, int *year)
{
			int i, k = 0, w = 0, len, a[3] = { 0 };
			for (i = 0; ch[i]; i++);
			len = i;
			for (i = 0; i < len; i++)
			{
				if (ch[i] == '/')
				{
					a[w] = getInt(k, i, ch);
					k = i + 1;
					w++;
				}
			}
			a[w] = getInt(k, i, ch);
			w++;
			
			*day = a[0];
			*month = a[1];
			*year = a[2];
}
int getInt(int k, int i, char *ch)
{
			 	int j, result, temp;
				for (j = k; ch[j] == '0'; j++);
			 	result = (int)ch[j] - '0';
			 	for (j = j + 1; j<i; j++)
				 	{
				 		temp = (int)ch[j] - '0';
						result = (result * 10) + temp;
				

						}
				return result;
}
int valid_date(int day, int month, int year)
{
	int leap = 0;
	if (day < 0 || month < 0 || year < 0)
		return -1;
	if (year > 9999)
		return -1;
	if (year % 4 == 0)
	{
		if (year % 100 == 0)
		{
			if (year % 400 == 0)
			{
				leap = 1;
			}
			else
			{
				leap = 0;
			}
		}
		else
		{
			leap = 1;
		}
	}
	else
	{
		leap = 0;
	}
	if (leap == 0)
	{
		if (month == 2 && day <= 28)
			return 1;
	}
	else
	{
		if (month == 2 && day <= 29)
			return 1;
	}
	if ((month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) && day <= 31)
		return 1;
	if ((month == 4 || month == 6 || month == 9 || month == 11) && day <= 30)
		return 1;
	return 0;
}
